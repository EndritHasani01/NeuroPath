spring.application.name=adaptive-learning-backend

# Server Configuration
server.port=8080
#spring.profiles.active=prod

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/adaptive_learning_db
# PostgreSQL username
spring.datasource.username=postgres
# PostgreSQL password
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver



# JPA / Hibernate Configuration
#For development: creates/updates schema. Use 'validate' or Flyway/Liquibase in production.
spring.jpa.hibernate.ddl-auto=update
#Show SQL queries in logs (useful for debugging)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging
logging.level.org.springframework=INFO
logging.level.com.example.adaptivelearning=DEBUG
logging.level.org.hibernate.SQL=DEBUG
# To see bound parameters
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.file.name=logs/app.log

# Python Service URL
python.service.baseurl=http://localhost:8000/api/ai

# Springdoc OpenAPI (Swagger) Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.show-actuator=true

# Security (Basic - to be enhanced)
# For now, permit all. In a real app, configure JWT or OAuth2.
# spring.security.user.name=user # Basic Auth (temporary)
# spring.security.user.password=password # Basic Auth (temporary)
# Expose all actuator endpoints (be cautious in production)
management.endpoints.web.exposure.include=*

jwt.secret=a39000af75b746e31242770f117cc0ff58a8cebf995b1d9d305c1c920230866fb8f3e4d3755f6c2edbccfcfdce6a0616ee2a28e0d63c4afe354f87f84e369e2ac9d1dd562278399520db110959819ceea3b96ffc63bf05be85cb08560da382d9f4ec45217aefb1a46ee2c2fd25574b37a889c1d4cf6122bca1b723eadd8907c91c6736698c23c5a1e3b9e4161aa561fa2714612b1ebb7ea001e32e4b7b410420e8af40b8dda19aba59155b04f62403bb685a9e27b8ad2ff691b45771a408247616f284814bb6761c3a6ecc7c988545e414cdb9cb641cd71f613616628914d22d6cea89a236af1dffcb69383ffb2cf4c025b4134d794bb3444beb03ac51b62ff0594fc211d6f436052627861d9b93160f7652484b2edbb3f6a5bf088aabc271dcca687d1313ac6967fd08fc65d8bec138da8401b1694bc0295b147487f0d0f8ba2ab74e404f67add0179e542ea6ff98146322011554502b07b46be6149d7872e884b577c0ba8f4a26e536e80ae816b24ecb3549c249aa539ed63ccc84b426b62526b2921754550806a3b126aaaaa3c6da68e55b7c4788361b44b9363b14ae107f70c0569efdd69efc6b9c2158923a383ec4ad33dc33678b529de6bb988d0bda174613de1f52d5682f1cfecf5fbaa8199415c2b0178c66a826eeb366a5e2345da1781f2c2debf3352c7acf762972dcff8b5542c69757a6cc527890342ec42f58cd
jwt.expiration-ms=8640000000
spring.security.user.password=password-is-ignored   # spring-boot disables default login
